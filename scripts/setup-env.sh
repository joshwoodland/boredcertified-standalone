#!/bin/bash

echo "🔧 Vercel Environment Variables Setup"
echo "====================================="
echo ""
echo "This script helps you set up environment variables for your Vercel deployment."
echo "Your app is deployed on Vercel, so variables should be set in the Vercel dashboard."
echo ""

# Check if we're running locally vs on Vercel
if [ -n "$VERCEL" ]; then
    echo "🚀 Running on Vercel deployment"
    echo "   Environment variables should already be set in Vercel dashboard"
    echo ""
    echo "📊 Environment variable status:"
    echo "   NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL:+SET}"
    echo "   NEXT_PUBLIC_SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY:+SET}"
    echo "   SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY:+SET}"
    echo "   NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL:+SET}"
    exit 0
fi

echo "💻 Running locally - checking local environment..."
echo ""

# Test current environment variables
echo "📊 Current environment variable status:"
echo "   NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL:-❌ NOT SET}"
echo "   NEXT_PUBLIC_SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY:-❌ NOT SET}"
echo "   SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY:-❌ NOT SET}"
echo "   NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL:-❌ NOT SET}"
echo ""

# Check if all variables are set
if [ -n "$NEXT_PUBLIC_SUPABASE_URL" ] && [ -n "$NEXT_PUBLIC_SUPABASE_ANON_KEY" ] && [ -n "$SUPABASE_SERVICE_ROLE_KEY" ]; then
    echo "✅ All required environment variables are set!"
    echo ""
    echo "🔍 Testing environment with node..."
    node test-env.js
    exit 0
fi

echo "❌ Some environment variables are missing!"
echo ""
echo "🎯 FOR VERCEL DEPLOYMENT:"
echo "   1. Go to https://vercel.com/dashboard"
echo "   2. Select your project"
echo "   3. Go to Settings → Environment Variables"
echo "   4. Add these variables:"
echo ""
echo "      Variable Name                  | Environment        | Value"
echo "      -------------------------------|-------------------|------------------"
echo "      NEXT_PUBLIC_SUPABASE_URL      | All environments  | https://your-id.supabase.co"
echo "      NEXT_PUBLIC_SUPABASE_ANON_KEY | All environments  | your_anon_key"
echo "      SUPABASE_SERVICE_ROLE_KEY     | All environments  | your_service_key"
echo "      NEXT_PUBLIC_APP_URL           | All environments  | https://your-app.vercel.app"
echo ""
echo "   5. Redeploy your app after setting variables"
echo ""

echo "🏠 FOR LOCAL DEVELOPMENT:"
echo "   Would you like to create a .env.local file for local testing? (y/n)"
read -p "   " create_local

if [ "$create_local" = "y" ] || [ "$create_local" = "Y" ]; then
    # Check if .env.local already exists
    if [ -f ".env.local" ]; then
        echo ""
        echo "⚠️  .env.local already exists!"
        echo "   View current contents? (y/n)"
        read -p "   " view_current
        
        if [ "$view_current" = "y" ] || [ "$view_current" = "Y" ]; then
            echo ""
            echo "📄 Current .env.local contents:"
            echo "------------------------------"
            cat .env.local
            echo ""
        fi
        
        echo "   Overwrite existing file? (y/n)"
        read -p "   " overwrite
        
        if [ "$overwrite" != "y" ] && [ "$overwrite" != "Y" ]; then
            echo "👋 Keeping existing file. Exiting."
            exit 0
        fi
        
        cp .env.local .env.local.backup
        echo "✅ Backed up existing file to .env.local.backup"
    fi

    echo ""
    echo "📝 Enter your Supabase configuration:"
    echo "   (Find these in Supabase dashboard → Settings → API)"
    echo ""

    # Get Supabase URL
    read -p "🌐 Supabase URL (e.g., https://abc123.supabase.co): " SUPABASE_URL

    # Get Anonymous Key
    echo ""
    read -p "🔑 Supabase Anonymous Key: " SUPABASE_ANON_KEY

    # Get Service Role Key
    echo ""
    read -p "🔐 Supabase Service Role Key: " SUPABASE_SERVICE_KEY

    # Create .env.local file
    cat > .env.local << EOF
# Local development environment variables
# Generated by setup-env.sh on $(date)
# 
# For production, set these in Vercel dashboard:
# https://vercel.com/dashboard → Your Project → Settings → Environment Variables

# Public Supabase URL (safe for client-side)
NEXT_PUBLIC_SUPABASE_URL=$SUPABASE_URL

# Public Supabase Anonymous Key (safe for client-side)
NEXT_PUBLIC_SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY

# Service Role Key (server-side only, sensitive)
SUPABASE_SERVICE_ROLE_KEY=$SUPABASE_SERVICE_KEY

# App URL for OAuth redirects (local development)
NEXT_PUBLIC_APP_URL=http://localhost:3000
EOF

    echo ""
    echo "✅ Local .env.local file created!"
    echo ""
    echo "🔍 Testing local environment..."
    node test-env.js
else
    echo ""
    echo "👋 Skipping local setup."
fi

echo ""
echo "📋 Next Steps:"
echo "   🔧 For Vercel:"
echo "      1. Set environment variables in Vercel dashboard"
echo "      2. Redeploy your application"
echo "      3. Check deployment logs for errors"
echo ""
echo "   🏠 For Local:"
echo "      1. Restart development server: npm run dev"
echo "      2. Test auth flow"
echo ""
echo "   🔐 For Supabase OAuth:"
echo "      1. Go to Supabase → Authentication → URL Configuration"
echo "      2. Add redirect URLs:"
echo "         - Production: https://your-app.vercel.app/auth/callback"
echo "         - Local: http://localhost:3000/auth/callback"
echo ""
echo "🎉 Setup guidance complete!" 